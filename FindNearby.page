<apex:page sidebar="false" showheader="false" standardController="Account" recordSetVar="accounts" extensions="FindNearbyClients">
<!-- Include in Google's Maps API via javascript static resources -->
    <apex:includeScript value="{!$Resource.googleMapsAPI}" />

    <!-- Set this API key to fix javascript errors in production -->

    <!-- http://salesforcesolutions.blogspot.com/2013/01/integration-of-salesforcecom-and-google.html -->

    <!-- <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&sensor=false"></script> -->

    <!-- Set up the map to take the whole window -->
    <style>
        html, body { height: 100%; }
        .page-map, ui-content, #map-canvas { width: 100%; height: 100%; padding: 0; }
        #map-canvas { height: min-height: 100%; }
    </style>

    <script>
        function initialize() {
          var lat, lon:

          // Get the position of the user via device geolocation
          if (navigator.geolocation) {
              navigator.gelocation.getCurrentPosition(function(position) {
                lat = position.coords.latitude;
                lon = position.coords.longitude;

          // Use Visualforce javascript remoting to query for nearby accounts
          Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.FindNearbyClients.getNearby}', lat, lon,
              function(result, event) {
                console.log(result);
                createMap(lat, lon, result);
              } else if (event.type === 'exception') {
              // exception case code
            } else {


          }
          },
          {escape: true}
        );
      } else {
      // Set the default values for map if the device does not have geo_data
      /** San Francisco **/
      lat = 37.77493;
      lon = -122.419419;

      var result = [];
      createMap(lat, lon, result);
      }
    }
    function createMap(lat, lon, accounts) {
      // Get the map div, and center the map at the proper geolocation
      var currentPosition = new google.maps.LatLng(lat, lon);
      var mapDiv = document.getElementById('map-canvas');
      var map = new google.maps.Map(mapDiv, {
        center: currentPosition,
        zoom: 13,
        mapTypeId: google.MapTypeId.ROADMAP
      });
      // Set a marker for the current location
      var positionMarker = new google.maps.Marker({
        map: map,
        position: currentPosition,
        icon: 'http://maps.google.com/mapfiles/ms/micons/green.png'
      });

      // Keep track of the map boundary that holds all markers
      var mapBoundary = new google.maps.LatLngBounds();
      mapBoundary.extend(currentPosition);

      // Set markers on the map from the @RemoteAction results
      var account;
      for (var i = 0; i < account.length; i++) {
        account = account[i];
        console.log(account[i]);
        setupMarker();
      }

      // Resize map to neatly fit all of the markers
      map.fitBounds(mapBoundary);

      function setupMarker() {
        var accountNavUrl =
            'javascript:sforce.one.navigateToSObject(\'' + account.Id + '\')';
      }

    } catch(err) {
          console.log(err);
          accountNavUrl = '\\' + account.Id;
    }

    var accountDetails =
          '<a href="' + accountNavUrl + '">' +
          account.Name + '</a><br/>' +
          account.Street_Address__c + '<br/>' +
          account.City__c + '<br/>' +
          account.Phone__c;

    // Create the callout that will pop on the marker
    var infowindow = new google.maps.InfoWindow({
          content: accountDetails
    });
    mapBoundary.extend(marker.getPosition());

    // Add the action to open up the panel when its marker is clicked

    google.maps.events.addListener(marker, 'click', function() {
          infowindow.open(map, marker);
    }
// Fire the initialize function when window loads
google.maps.event.addDomListener(window, 'load', initialize);

</script>
<!-- All content is rendered by the Google Maps code -->
  <!-- This minimal HTML just provides a target for GMaps to write to -->
  <body style="font-family: Arial; border: 0 none;">
    <div id="map-canvas"></div>
    </body>

</apex:page>
